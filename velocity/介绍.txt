官网：http://www.julian.com/research/velocity/

velocity给jQuery对象增加了velocity方法，API和jQuery中的animate函数一样一样的：
1	$("img").velocity({"width":400,"height":400},1000,function(){
2		$(this).hide();
3	});
通过观察，知道了velocity的动画机理还是定时器，底层还是setInterval那个运动框架。也就是说在动画机理层面上，velocity并没有做出质的改变。

那velocity有什么意义呢？它拓展了jQuery中的animate函数。

 
velocity能够实现rotateZ的动画：
1	$("img").velocity({"rotateZ":"40deg"},1000);
机理是定时器！！

velocity能够实现背景颜色的动画：
1	$("body").velocity({"backgroundColor":"#123"},10000);
机理是定时器！！

velocity能够实现3D的动画：
1	$("img").velocity({"rotateX":"40deg"},1000);
机理是定时器！！

总结一下：
velocity放弃了所有能够用过渡实现的动画效果。连rotateX这种3D的变化，都用定时器实现了。所以感觉是一种“退化”，明明用transition能实现，为什么还要用定时器呢？毕竟我们之前说过，transition的效率比定时器高过了。这就叫做“舍得”，有舍才有得，velocity放弃了效率，但是赢回了“正向编程”编程的快感。你会发现，动画时间不用写在css里面了，也有了回调函数。
一定要记住velocity就是jQuery的插件，丰富了jQuery中animate函数的功能。
	$("img").velocity({
		"rotateX":"40deg",
		"rotateY":"40deg",
		"translateZ":"400px"
	},1000,function(){
		//回调函数
		$(this).fadeOut();
	});
